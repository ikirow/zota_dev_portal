/*
Theme Name: ZotaPay Dev Portal

Adding support for languages written in a Right To Left (RTL) direction is easy -
it's just a matter of overwriting all the horizontal positioning attributes
of your CSS stylesheet in a separate stylesheet file named rtl.css.

https://codex.wordpress.org/Right-to-Left_Language_Support

*/
/**
 * Strips the unit from a given number-unit-combination and returns the number.
 * @link: http://stackoverflow.com/a/12335841/1779999
 * @usage: parse-int(10px) => 10
 */
/**
 * Simply adds the em unit to a given number. This is used twice in the
 * function underneath, thus the need for a separate function.
 */
/**
 * Calculates em values for a given list of (px or em) values and a given em
 * base. Multiply base values for nested em structures (last @usage example).
 * @usage: em(10px, 1.125) => .55556em
 *         em(24px, .875em) => 1.71429em
 *         em(12px 0 7em rgba(0, 0, 0, .7), 1.75) => .42857em 0 4em rgba(0, 0, 0, 0.7)
 *         em(12px) + em(3em) => 3.75em
 *         em(23px, em(53px)) => .43396em
 *         em(24px, 1.5 * 1.125) => .88889em
 */
body {
  direction: rtl;
  unicode-bidi: embed; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJ0bC5zY3NzIiwicnRsLmNzcyIsInZhcmlhYmxlcy9fdHlwb2dyYXBoeS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Q0NTQztBQ3NERDs7OztFRGpERTtBQzJERjs7O0VEdkRFO0FDZ0VGOzs7Ozs7Ozs7RUR0REU7QURmRjtFQUNFLGNBQWM7RUFDZCxtQkFBbUIsRUFBQSIsImZpbGUiOiJydGwuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLypcblRoZW1lIE5hbWU6IFdlYml6IFN0YXJ0ZXJcblxuQWRkaW5nIHN1cHBvcnQgZm9yIGxhbmd1YWdlcyB3cml0dGVuIGluIGEgUmlnaHQgVG8gTGVmdCAoUlRMKSBkaXJlY3Rpb24gaXMgZWFzeSAtXG5pdCdzIGp1c3QgYSBtYXR0ZXIgb2Ygb3ZlcndyaXRpbmcgYWxsIHRoZSBob3Jpem9udGFsIHBvc2l0aW9uaW5nIGF0dHJpYnV0ZXNcbm9mIHlvdXIgQ1NTIHN0eWxlc2hlZXQgaW4gYSBzZXBhcmF0ZSBzdHlsZXNoZWV0IGZpbGUgbmFtZWQgcnRsLmNzcy5cblxuaHR0cHM6Ly9jb2RleC53b3JkcHJlc3Mub3JnL1JpZ2h0LXRvLUxlZnRfTGFuZ3VhZ2VfU3VwcG9ydFxuXG4qL1xuQGltcG9ydCBcInZhcmlhYmxlcy92YXJpYWJsZXMtc2l0ZVwiO1xuQGltcG9ydCBcIm1peGlucy9taXhpbnMtbWFzdGVyXCI7XG5cbmJvZHkge1xuICBkaXJlY3Rpb246IHJ0bDtcbiAgdW5pY29kZS1iaWRpOiBlbWJlZDtcbn1cbiIsIi8qXG5UaGVtZSBOYW1lOiBXZWJpeiBTdGFydGVyXG5cbkFkZGluZyBzdXBwb3J0IGZvciBsYW5ndWFnZXMgd3JpdHRlbiBpbiBhIFJpZ2h0IFRvIExlZnQgKFJUTCkgZGlyZWN0aW9uIGlzIGVhc3kgLVxuaXQncyBqdXN0IGEgbWF0dGVyIG9mIG92ZXJ3cml0aW5nIGFsbCB0aGUgaG9yaXpvbnRhbCBwb3NpdGlvbmluZyBhdHRyaWJ1dGVzXG5vZiB5b3VyIENTUyBzdHlsZXNoZWV0IGluIGEgc2VwYXJhdGUgc3R5bGVzaGVldCBmaWxlIG5hbWVkIHJ0bC5jc3MuXG5cbmh0dHBzOi8vY29kZXgud29yZHByZXNzLm9yZy9SaWdodC10by1MZWZ0X0xhbmd1YWdlX1N1cHBvcnRcblxuKi9cbi8qKlxuICogU3RyaXBzIHRoZSB1bml0IGZyb20gYSBnaXZlbiBudW1iZXItdW5pdC1jb21iaW5hdGlvbiBhbmQgcmV0dXJucyB0aGUgbnVtYmVyLlxuICogQGxpbms6IGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzEyMzM1ODQxLzE3Nzk5OTlcbiAqIEB1c2FnZTogcGFyc2UtaW50KDEwcHgpID0+IDEwXG4gKi9cbi8qKlxuICogU2ltcGx5IGFkZHMgdGhlIGVtIHVuaXQgdG8gYSBnaXZlbiBudW1iZXIuIFRoaXMgaXMgdXNlZCB0d2ljZSBpbiB0aGVcbiAqIGZ1bmN0aW9uIHVuZGVybmVhdGgsIHRodXMgdGhlIG5lZWQgZm9yIGEgc2VwYXJhdGUgZnVuY3Rpb24uXG4gKi9cbi8qKlxuICogQ2FsY3VsYXRlcyBlbSB2YWx1ZXMgZm9yIGEgZ2l2ZW4gbGlzdCBvZiAocHggb3IgZW0pIHZhbHVlcyBhbmQgYSBnaXZlbiBlbVxuICogYmFzZS4gTXVsdGlwbHkgYmFzZSB2YWx1ZXMgZm9yIG5lc3RlZCBlbSBzdHJ1Y3R1cmVzIChsYXN0IEB1c2FnZSBleGFtcGxlKS5cbiAqIEB1c2FnZTogZW0oMTBweCwgMS4xMjUpID0+IC41NTU1NmVtXG4gKiAgICAgICAgIGVtKDI0cHgsIC44NzVlbSkgPT4gMS43MTQyOWVtXG4gKiAgICAgICAgIGVtKDEycHggMCA3ZW0gcmdiYSgwLCAwLCAwLCAuNyksIDEuNzUpID0+IC40Mjg1N2VtIDAgNGVtIHJnYmEoMCwgMCwgMCwgMC43KVxuICogICAgICAgICBlbSgxMnB4KSArIGVtKDNlbSkgPT4gMy43NWVtXG4gKiAgICAgICAgIGVtKDIzcHgsIGVtKDUzcHgpKSA9PiAuNDMzOTZlbVxuICogICAgICAgICBlbSgyNHB4LCAxLjUgKiAxLjEyNSkgPT4gLjg4ODg5ZW1cbiAqL1xuYm9keSB7XG4gIGRpcmVjdGlvbjogcnRsO1xuICB1bmljb2RlLWJpZGk6IGVtYmVkOyB9XG4iLCIvLyAgRm9udHMgYW5kIGljb25zXG4vLyAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gTWl4aW4gZm9yIGFkZGluZyBjdXN0b20gZm9udHMgaW4gdGhlIGRpciAvZm9udHMvZm9udGZvbGRlcm5hbWUvZm9udC1yZWd1bGFyXG4vLyBleGFtcGxlIC9mb250cy9hdmVydGEvYXZlcnRhLWJvbGQud29mZlxuLy8gZXhhbXBsZSAvZm9udHMvYXZlcnRhL2F2ZXJ0YS1yZWd1bGFyLndvZmZcblxuQG1peGluIGZvbnRkZWYoJHBhdGgsICRmaWxlbmFtZSwgJHZlcnNpb24sICR0eXBlOlwiUmVndWxhclwiKSB7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvI3skcGF0aH0vI3skZmlsZW5hbWV9LSN7JHR5cGV9LmVvdD8jaWVmaXgmdj0jeyR2ZXJzaW9ufVwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSxcbiAgdXJsKFwiLi4vZm9udHMvI3skcGF0aH0vI3skZmlsZW5hbWV9LSN7JHR5cGV9LndvZmY/dj0jeyR2ZXJzaW9ufVwiKSBmb3JtYXQoXCJ3b2ZmXCIpLFxuICB1cmwoXCIuLi9mb250cy8jeyRwYXRofS8jeyRmaWxlbmFtZX0tI3skdHlwZX0udHRmP3Y9I3skdmVyc2lvbn1cIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG59XG5cbi8vIEJlbG93IGFyZSBleGFtcGxlc1xuLy8gJEF2ZXJ0YUZhbWlseTogJ0F2ZXJ0YSc7XG4vLyAkQXZlcnRhVmVyc2lvbjogJzEuMCc7XG4vLyAkQXZlcnRhUGF0aDogXCJBdmVydGFcIjtcbi8vICRyZWd1bGFyZm9udDogNDAwO1xuLy8gJHNlbWlib2xkZm9udDogNTAwO1xuLy8gJGJvbGRmb250OiA2MDA7XG4vL1xuLy9AZm9udC1mYWNlIHtcbi8vICBmb250LWZhbWlseTogJEF2ZXJ0YUZhbWlseTtcbi8vICBmb250LWRpc3BsYXk6IGF1dG87XG4vLyAgQGluY2x1ZGUgZm9udGRlZigkQXZlcnRhUGF0aCwgJEF2ZXJ0YUZhbWlseSwgJEF2ZXJ0YVZlcnNpb24sIFwiUmVndWxhclwiKTtcbi8vICBmb250LXdlaWdodDogJHJlZ3VsYXJmb250O1xuLy99XG4vL0Bmb250LWZhY2Uge1xuLy8gIGZvbnQtZmFtaWx5OiAkQXZlcnRhRmFtaWx5O1xuLy8gIGZvbnQtZGlzcGxheTogYXV0bztcbi8vICBAaW5jbHVkZSBmb250ZGVmKCRBdmVydGFQYXRoLCAkQXZlcnRhRmFtaWx5LCAkQXZlcnRhVmVyc2lvbiwgXCJTZW1pYm9sZFwiKTtcbi8vICBmb250LXdlaWdodDogJHNlbWlib2xkZm9udDtcbi8vfVxuLy9AZm9udC1mYWNlIHtcbi8vICBmb250LWZhbWlseTogJEF2ZXJ0YUZhbWlseTtcbi8vICBmb250LWRpc3BsYXk6IGF1dG87XG4vLyAgQGluY2x1ZGUgZm9udGRlZigkQXZlcnRhUGF0aCwgJEF2ZXJ0YUZhbWlseSwgJEF2ZXJ0YVZlcnNpb24sIFwiQm9sZFwiKTtcbi8vICBmb250LXdlaWdodDogJGJvbGRmb250O1xuLy99XG5cbiRmb250LWZhbWlseS1zYW5zLXNlcmlmOiBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuJGZvbnQtZmFtaWx5LXNlcmlmOiBHZW9yZ2lhLCAnVGltZXMgTmV3IFJvbWFuJywgc2VyaWY7XG5cblxuXG4kZm9udF9fbWFpbjogJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWY7XG4kZm9udF9fY29kZTogQXJpYWwsIFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuJGZvbnRfX3ByZTogXCJDb3VyaWVyIDEwIFBpdGNoXCIsIENvdXJpZXIsIG1vbm9zcGFjZTtcbiRmb250X19saW5lLWhlaWdodC1ib2R5OiAxLjU7XG4kZm9udF9fbGluZS1oZWlnaHQtcHJlOiAxLjY7XG5cbiRiYXNlX2ZvbnRfc2l6ZTogMTZweDtcbiRmb250X2ZhbWlseTogJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWY7XG4kZm9udF9mYW1pbHlfbWVudTogJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWY7XG4kZm9udF9mYW1pbHlfaGVhZGluZ3M6ICRmb250LWZhbWlseS1zZXJpZjtcblxuXG4kZWFzaW5nOiBlYXNlLW91dDtcblxuLy8gUFggdG8gRU0vUkVNIC0gaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vaXNlbGxzb2FwLzgyOTk3MjZcblxuJGJhc2UtZm9udC1zaXplOiAkYmFzZV9mb250X3NpemU7XG5cbi8qKlxuICogU3RyaXBzIHRoZSB1bml0IGZyb20gYSBnaXZlbiBudW1iZXItdW5pdC1jb21iaW5hdGlvbiBhbmQgcmV0dXJucyB0aGUgbnVtYmVyLlxuICogQGxpbms6IGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzEyMzM1ODQxLzE3Nzk5OTlcbiAqIEB1c2FnZTogcGFyc2UtaW50KDEwcHgpID0+IDEwXG4gKi9cblxuQGZ1bmN0aW9uIHBhcnNlLWludCgkbnVtYmVyKSB7XG4gIEByZXR1cm4gJG51bWJlciAvICgkbnVtYmVyICogMCArIDEpO1xufVxuXG4vKipcbiAqIFNpbXBseSBhZGRzIHRoZSBlbSB1bml0IHRvIGEgZ2l2ZW4gbnVtYmVyLiBUaGlzIGlzIHVzZWQgdHdpY2UgaW4gdGhlXG4gKiBmdW5jdGlvbiB1bmRlcm5lYXRoLCB0aHVzIHRoZSBuZWVkIGZvciBhIHNlcGFyYXRlIGZ1bmN0aW9uLlxuICovXG5cbkBmdW5jdGlvbiBhZGQtZW0tdW5pdCgkbnVtYmVyKSB7XG4gIEByZXR1cm4gJG51bWJlciAqIDFlbTtcbn1cblxuLyoqXG4gKiBDYWxjdWxhdGVzIGVtIHZhbHVlcyBmb3IgYSBnaXZlbiBsaXN0IG9mIChweCBvciBlbSkgdmFsdWVzIGFuZCBhIGdpdmVuIGVtXG4gKiBiYXNlLiBNdWx0aXBseSBiYXNlIHZhbHVlcyBmb3IgbmVzdGVkIGVtIHN0cnVjdHVyZXMgKGxhc3QgQHVzYWdlIGV4YW1wbGUpLlxuICogQHVzYWdlOiBlbSgxMHB4LCAxLjEyNSkgPT4gLjU1NTU2ZW1cbiAqICAgICAgICAgZW0oMjRweCwgLjg3NWVtKSA9PiAxLjcxNDI5ZW1cbiAqICAgICAgICAgZW0oMTJweCAwIDdlbSByZ2JhKDAsIDAsIDAsIC43KSwgMS43NSkgPT4gLjQyODU3ZW0gMCA0ZW0gcmdiYSgwLCAwLCAwLCAwLjcpXG4gKiAgICAgICAgIGVtKDEycHgpICsgZW0oM2VtKSA9PiAzLjc1ZW1cbiAqICAgICAgICAgZW0oMjNweCwgZW0oNTNweCkpID0+IC40MzM5NmVtXG4gKiAgICAgICAgIGVtKDI0cHgsIDEuNSAqIDEuMTI1KSA9PiAuODg4ODllbVxuICovXG5cbkBmdW5jdGlvbiBlbSgkdmFsdWVzLCAkZW0tYmFzZTogMSkge1xuICAkYmFzZS1mb250LXNpemU6IHBhcnNlLWludCgkYmFzZS1mb250LXNpemUpO1xuICAkZW0tYmFzZTogcGFyc2UtaW50KCRlbS1iYXNlKTtcbiAgJHJlc3VsdDogKCk7XG5cbiAgQGVhY2ggJHZhbHVlIGluICR2YWx1ZXMge1xuICAgIEBpZiAkdmFsdWUgPT0gMCBvciB0eXBlLW9mKCR2YWx1ZSkgIT0gXCJudW1iZXJcIiB7XG4gICAgICAkcmVzdWx0OiBhcHBlbmQoJHJlc3VsdCwgJHZhbHVlKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICR1bml0OiB1bml0KCR2YWx1ZSk7XG4gICAgICAkdmFsdWU6IHBhcnNlLWludCgkdmFsdWUpO1xuXG4gICAgICBAaWYgJHVuaXQgPT0gXCJweFwiIHtcbiAgICAgICAgJHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsIGFkZC1lbS11bml0KCR2YWx1ZSAvICgkYmFzZS1mb250LXNpemUgKiAkZW0tYmFzZSkpKTtcbiAgICAgIH0gQGVsc2UgaWYgJHVuaXQgPT0gXCJlbVwiIHtcbiAgICAgICAgJHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsIGFkZC1lbS11bml0KCR2YWx1ZSAvICRlbS1iYXNlKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIElmIG9ubHkgb25lIHZhbHVlIGlzIHByb3ZpZGVkLCBvdXRwdXQgdGhlIGluc3RhbmNlIG9mIHRoYXQgb2JqZWN0IGluc3RlYWRcbiAgICogb2YgdGhlIHdob2xlIGxpc3QuIFRoaXMgZW5hYmxlcyB1c2UgY2FzZXMgbGlrZSBuZXN0ZWQgZnVuY3Rpb24gaW52b2NhdGlvbnNcbiAgICogKGUuZy4gYGVtKDJweCwgZW0oMTVweCkpYCkgb3IgYWRkaXRpb25zL3N1YnRyYWN0aW9ucyAoZS5nLiBgZW0oNXB4KSArIGVtKDMycHgpYCkuXG4gICAqL1xuICBAaWYgbGVuZ3RoKCRyZXN1bHQpID09IDEge1xuICAgIEByZXR1cm4gbnRoKCRyZXN1bHQsIDEpO1xuICB9IEBlbHNlIHtcbiAgICBAcmV0dXJuICRyZXN1bHQ7XG4gIH1cbn1cblxuXG5cblxuXG4iXX0= */
